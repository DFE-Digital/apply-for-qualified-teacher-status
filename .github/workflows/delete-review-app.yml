name: Delete Review App

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  delete-review-app:
    name: Delete Review App ${{ github.event.pull_request.number }}
    concurrency: deploy_review_${{ github.event.pull_request.number }}
    if: ${{ contains(github.event.pull_request.labels.*.name, 'deploy') }}
    runs-on: ubuntu-latest
    environment: review_aks
    steps:
      - uses: actions/checkout@v3

      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.5
          terraform_wrapper: false

      - name: Set environment variables
        run: |
          state_file_name=terraform-${{ github.event.pull_request.number }}.tfstate

          echo "TF_STATE_FILE=$state_file_name" >> $GITHUB_ENV

          state_file_status=$(az storage blob list -c afqts-tfstate \
            --account-name "s189t01afqtstfstatervsa" \
            --prefix $state_file_name --query "[].name" -o tsv)

          if [ -n "$state_file_status" ]; then
            echo "TF_STATE_EXISTS=true" >> $GITHUB_ENV
          fi

      - name: Set Azure variables
        if: env.TF_STATE_EXISTS == 'true'
        shell: pwsh
        run: |
          $AZURE_CREDENTIALS_JSON = '${{ secrets.AZURE_CREDENTIALS }}'

          $ARM_CLIENT_ID = ( $AZURE_CREDENTIALS_JSON | ConvertFrom-Json ).clientId
          Write-Output "::add-mask::$ARM_CLIENT_ID"
          "ARM_CLIENT_ID=$ARM_CLIENT_ID" >> $env:GITHUB_ENV

          $ARM_CLIENT_SECRET =  ( $AZURE_CREDENTIALS_JSON | ConvertFrom-Json ).clientSecret
          Write-Output "::add-mask::$ARM_CLIENT_SECRET"
          "ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET" >> $env:GITHUB_ENV

          $ARM_SUBSCRIPTION_ID =  ( $AZURE_CREDENTIALS_JSON | ConvertFrom-Json ).subscriptionId
          Write-Output "::add-mask::$ARM_SUBSCRIPTION_ID"
          "ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID" >> $env:GITHUB_ENV

          $ARM_TENANT_ID =  ( $AZURE_CREDENTIALS_JSON | ConvertFrom-Json ).tenantId
          Write-Output "::add-mask::$ARM_TENANT_ID"
          "ARM_TENANT_ID=$ARM_TENANT_ID" >> $env:GITHUB_ENV

      - name: Destroy Terraform
        if: env.TF_STATE_EXISTS == 'true'
        id: destroy-terraform
        shell: bash
        run: make ci review_aks terraform-destroy
        env:
          TF_VAR_azure_sp_credentials_json: ${{ secrets.AZURE_CREDENTIALS }}
          DOCKER_IMAGE: "ghcr.io/dfe-digital/apply-for-qualified-teacher-status:no-tag"
          pr_id: ${{ github.event.pull_request.number }}

      - name: Delete Terraform state file
        if: env.TF_STATE_EXISTS == 'true'
        run: |
          az storage blob delete -c afqts-tfstate --name ${{ env.TF_STATE_FILE }} \
            --account-name "s189t01afqtstfstatervsa"
