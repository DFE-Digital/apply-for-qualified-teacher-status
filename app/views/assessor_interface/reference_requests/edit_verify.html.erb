<% work_history = @reference_request.work_history %>
<% can_edit_work_history = policy([:assessor_interface, work_history]).edit? %>
<% can_update_verify_reference_request = @assessment.verify? && policy([:assessor_interface, @reference_request]).update_verify? %>
<% can_resend_email_reference_request = @assessment.verify? && policy([:assessor_interface, @reference_request]).resend_email? %>

<% title = can_update_verify_reference_request ? "Review reference" : "View reference" %>

<% content_for :page_title, title_with_error_prefix(title, error: @form.errors.any?) %>
<% content_for :back_link_url, assessor_interface_application_form_assessment_reference_requests_path %>

<%= form_with model: @form, url: [:verify, :assessor_interface, @application_form, @assessment, @reference_request] do |f| %>
  <%= f.govuk_error_summary %>

  <h1 class="govuk-heading-xl"><%= title %></h1>

  <h2 class="govuk-heading-m">Reference details</h2>

  <%= govuk_summary_list(html_attributes: { id: "reference-details-summary-list" }) do |summary_list|
    summary_list.with_row do |row|
      row.with_key { "Name of institution" }
      row.with_value { work_history.school_name }
    end

    summary_list.with_row do |row|
      row.with_key { "Number of months" }
      row.with_value { WorkHistoryDuration.for_record(work_history).count_months.to_s }
    end

    summary_list.with_row do |row|
      row.with_key { "Name of reference" }
      row.with_value { work_history.contact_name }

      if can_edit_work_history
        row.with_action(text: "Change", href: [:edit, :assessor_interface, @application_form, work_history])
      end
    end

    summary_list.with_row do |row|
      row.with_key { "Job title of reference" }
      row.with_value { work_history.contact_job }

      if can_edit_work_history
        row.with_action(text: "Change", href: [:edit, :assessor_interface, @application_form, work_history])
      end
    end

    summary_list.with_row do |row|
      row.with_key { "Email address of reference" }
      row.with_value do
        if work_history.activate_eligibility_domain_concern?
          tag.div(class: "govuk-form-group govuk-form-group--error") do
            content_tag(:p, "This email domain has been flagged with eligibility concerns", class: "govuk-error-message") +
              work_history.contact_email
          end
        else
          work_history.contact_email
        end
      end

      if can_edit_work_history
        row.with_action(text: "Change", href: [:edit, :assessor_interface, @application_form, work_history])
      end
    end
  end %>

  <% if @reference_request.received? %>
    <% unless can_update_verify_reference_request %>
      <p class="govuk-body">This reference is view only. Return to the review reference screen to make your decision.</p>
    <% end %>

    <%= render "shared/reference_request_summary", reference_request: @reference_request, changeable: false %>
  <% elsif @reference_request.requested? && can_resend_email_reference_request %>
    <%= govuk_details(summary_text: "Resend reference request email") do %>
      <%= govuk_warning_text(text: "Only resend reference requests if you have been asked to do so.") %>

      <% if (timeline_event = @application_form.timeline_events.email_sent.where(mailer_class_name: "RefereeMailer", mailer_action_name: "reference_requested").order(created_at: :desc).first) %>
        <p class="govuk-body">This email was last sent on <%= timeline_event.created_at.to_fs %></p>
      <% end %>

      <%= govuk_button_link_to "Resend reference request email", [:resend_email, :assessor_interface, @application_form, @assessment, @reference_request] %>

      <p class="govuk-body">Resending this email will not affect the original reminder schedule. Reminders will be sent automatically 2 weeks and 4 weeks after the original reference request email was sent.</p>
    <% end %>
  <% end %>

  <% if @reference_request.expired? %>
    <%= govuk_warning_text(text: "This reference is overdue.") %>
  <% end %>

  <% if can_update_verify_reference_request && (@reference_request.received? || @reference_request.expired?) %>
    <p class="govuk-body">You must send this reference for review if any of the responses contain a comment.</p>

    <% if @reference_request.received? %>
      <%= f.govuk_radio_buttons_fieldset :passed, legend: { text: "Are you satisfied that this reference should count towards the applicantâ€™s work experience?" }, disabled: @application_form.on_hold? do %>
        <%= f.govuk_radio_button :passed, :true, link_errors: true, disabled: @application_form.on_hold? %>
        <%= f.govuk_radio_button :passed, :false, disabled: @application_form.on_hold? %>
      <% end %>
    <% else %>
      <%= f.govuk_radio_buttons_fieldset :passed, legend: { text: "Do you want to send this reference for review?" }, disabled: @application_form.on_hold? do %>
        <%= f.govuk_radio_button :passed, :false, link_errors: true, label: { text: "Yes, send for review" }, disabled: @application_form.on_hold? %>
      <% end %>
    <% end %>

    <%= f.govuk_submit disabled: @application_form.on_hold? do %>
      <%= render "shared/assessor_interface/cancel_link" %>
    <% end %>
  <% end %>
<% end %>
